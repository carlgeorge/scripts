#!/usr/bin/bash

#set -e

REPO_DIR=/srv/http/arch.cgtx.us/x86_64
IGNORE=(
	clucker
	cwg-meta-apps-cli
	cwg-meta-apps-x11
	cwg-meta-openbox
	cwg-meta-pulseaudio
	cwg-meta-python
	cwg-meta-rackspace
	hammertime
	pidgin-sametime
)

if tput setaf 0 &>/dev/null; then
        ALL_OFF="$(tput sgr0)"
        BOLD="$(tput bold)"
        BLUE="${BOLD}$(tput setaf 4)"
        GREEN="${BOLD}$(tput setaf 2)"
        RED="${BOLD}$(tput setaf 1)"
        YELLOW="${BOLD}$(tput setaf 3)"
else
        ALL_OFF="\e[1;0m"
        BOLD="\e[1;1m"
        BLUE="${BOLD}\e[1;34m"
        GREEN="${BOLD}\e[1;32m"
        RED="${BOLD}\e[1;31m"
        YELLOW="${BOLD}\e[1;33m"
fi

plain() {
        local mesg=${1}; shift
        printf "${BOLD}    ${mesg}${ALL_OFF}\n" "${@}" >&2
}

msg() {
        local mesg=${1}; shift
        printf "${GREEN}==>${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "${@}" >&2
}

msg2() {
        local mesg=${1}; shift
        printf "${BLUE}  ->${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "${@}" >&2
}

prompt() {
        local mesg=${1}; shift
        printf "${GREEN}==>${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}" >&2
}

warning() {
	local mesg=$1; shift
	printf "${YELLOW}==> $(gettext "WARNING:")${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@" >&2
}

error() {
	local mesg=$1; shift
	printf "${RED}==> $(gettext "ERROR:")${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@" >&2
}

query_file() {
	pacman -Q --info --file ${1} \
	| awk -v x=${2} '$1==x{print$3}'
}

query_aur() {
	cower --ignorerepo=cwg,pacman --info --format '%v' ${1} 2>/dev/null
}

skip_check() {
	local PKG=${1}
	for i in ${IGNORE[@]}; do
		if [[ ${PKG} == ${i} ]]; then
			return 0
		fi
	done
	return 1
}

check() {
	local PKG=${1}
	NAME=$(query_file ${PKG} Name)
	if skip_check ${NAME}; then
		return 0
	fi
	FILEVERSION=$(query_file ${PKG} Version)
	AURVERSION=$(query_aur ${NAME})
	if [[ -z ${AURVERSION} ]]; then
		error "${NAME} not found in the AUR"
	elif [[ ${FILEVERSION} == ${AURVERSION} ]]; then
		msg "${NAME} PASS"
	else
		error "${NAME} FAIL"
		msg2 "local: ${FILEVERSION}"
		msg2 "AUR: ${AURVERSION}"
	fi
}


main() {
	local PKG
	local ARG
	if [[ ${#} -eq 0 ]]; then
		for PKG in ${REPO_DIR}/*.pkg.tar.xz; do
			check ${PKG}
		done
	else
		for ARG in ${@}; do
			check ${ARG}
		done
	fi
}

main ${@}
